postgres=# \timing
Timing is on.
postgres=# drop table if exists temp;
NOTICE:  table "temp" does not exist, skipping
DROP TABLE
Time: 0.891 ms
postgres=# drop table if exists temp1;
DROP TABLE
Time: 31.605 ms
postgres=# drop table if exists temp2;
DROP TABLE
Time: 21.434 ms
postgres=# drop table if exists temp3;
DROP TABLE
Time: 69.281 ms
postgres=# drop table if exists temp4;
DROP TABLE
Time: 32.903 ms
postgres=# drop table if exists temp5;
DROP TABLE
Time: 26.982 ms
postgres=# drop table if exists temp6;
DROP TABLE
Time: 20.994 ms
postgres=# 
postgres=# create temporary table temp as (select stocksymbol, stocktime, price from stock order by stocksymbol asc, stocktime asc);
SELECT 1000000
Time: 2688.992 ms
postgres=# 
postgres=# create table temp1 as (select row_number() over() as num,* from temp); 
SELECT 1000000
Time: 2887.896 ms
postgres=# create table temp2 as (select * from temp1);
SELECT 1000000
Time: 1498.050 ms
postgres=# 
postgres=# create table temp3 as 
postgres-# (
postgres(# select *
postgres(# from
postgres(# (
postgres(# select temp1.stocksymbol, temp1.num, temp2.stocktime, temp2.price from temp1, temp2 where (temp1.stocksymbol = temp2.stocksymbol) and (temp1.num - 9 = temp2.num)
postgres(# union all
postgres(# select temp1.stocksymbol, temp1.num, temp2.stocktime, temp2.price from temp1, temp2 where (temp1.stocksymbol = temp2.stocksymbol) and (temp1.num - 8 = temp2.num)
postgres(# union all
postgres(# select temp1.stocksymbol, temp1.num, temp2.stocktime, temp2.price from temp1, temp2 where (temp1.stocksymbol = temp2.stocksymbol) and (temp1.num - 7 = temp2.num)
postgres(# union all
postgres(# select temp1.stocksymbol, temp1.num, temp2.stocktime, temp2.price from temp1, temp2 where (temp1.stocksymbol = temp2.stocksymbol) and (temp1.num - 6 = temp2.num)
postgres(# union all
postgres(# select temp1.stocksymbol, temp1.num, temp2.stocktime, temp2.price from temp1, temp2 where (temp1.stocksymbol = temp2.stocksymbol) and (temp1.num - 5 = temp2.num)
postgres(# union all
postgres(# select temp1.stocksymbol, temp1.num, temp2.stocktime, temp2.price from temp1, temp2 where (temp1.stocksymbol = temp2.stocksymbol) and (temp1.num - 4 = temp2.num)
postgres(# union all
postgres(# select temp1.stocksymbol, temp1.num, temp2.stocktime, temp2.price from temp1, temp2 where (temp1.stocksymbol = temp2.stocksymbol) and (temp1.num - 3 = temp2.num)
postgres(# union all
postgres(# select temp1.stocksymbol, temp1.num, temp2.stocktime, temp2.price from temp1, temp2 where (temp1.stocksymbol = temp2.stocksymbol) and (temp1.num - 2 = temp2.num)
postgres(# union all
postgres(# select temp1.stocksymbol, temp1.num, temp2.stocktime, temp2.price from temp1, temp2 where (temp1.stocksymbol = temp2.stocksymbol) and (temp1.num - 1 = temp2.num)
postgres(# union all
postgres(# select temp1.stocksymbol, temp1.num, temp2.stocktime, temp2.price from temp1, temp2 where (temp1.stocksymbol = temp2.stocksymbol) and (temp1.num = temp2.num)
postgres(# ) as sub1
postgres(# order by stocksymbol, num
postgres(# );
SELECT 6932053
Time: 55134.072 ms
postgres=# 
postgres=# create table temp4 as
postgres-# (
postgres(# select stocksymbol, num, min(price) as price
postgres(# from temp3
postgres(# group by stocksymbol, num
postgres(# );
SELECT 1000000
Time: 19383.557 ms
postgres=# 
postgres=# create table temp5 as
postgres-# (
postgres(# select temp3.* from temp4 left  join temp3 on(temp4.stocksymbol = temp3.stocksymbol and temp4.num = temp3.num and temp4.price = temp3.price)
postgres(# );
SELECT 1085848
Time: 18677.992 ms
postgres=# 
postgres=# create table temp6 as
postgres-# (
postgres(# select temp1.stocksymbol, temp5.stocktime as buy_time, temp1.stocktime as sell_time, (temp1.price - temp5.price) as profit
postgres(# from temp1, temp5
postgres(# where temp1.stocksymbol = temp1.stocksymbol and temp1.num = temp5.num
postgres(# );
SELECT 1085848
Time: 6155.836 ms
postgres=# 
postgres=# select * from temp6 where profit = (select max(profit) from temp6) limit 1;
 stocksymbol | buy_time | sell_time | profit 
-------------+----------+-----------+--------
        9747 |    96143 |    689567 |     39
(1 row)

Time: 449.891 ms
postgres=# 

