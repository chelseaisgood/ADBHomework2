postgres=# \timing
Timing is on.
postgres=# drop table if exists temp;
DROP TABLE
Time: 30.424 ms
postgres=# drop table if exists temp1;
DROP TABLE
Time: 19.731 ms
postgres=# drop table if exists temp2;
DROP TABLE
Time: 23.115 ms
postgres=# 
postgres=# create table temp as (select * from stock order by stocksymbol asc, stocktime asc);
SELECT 1000000
Time: 3390.314 ms
postgres=# create table temp1 as (select row_number() over() as num,* from temp); 
SELECT 1000000
Time: 2006.421 ms
postgres=# create table temp2 as (select * from temp1);
SELECT 1000000
Time: 2486.647 ms
postgres=# 
postgres=# 
postgres=# select stocksymbol, ((sum(sub.price * sub.quantity))/(sum(sub.quantity))) as running_average_weighted
postgres-# from
postgres-# (
postgres(# select temp1.stocksymbol, temp1.num, temp2.quantity, temp2.price from temp1, temp2 where (temp1.stocksymbol = temp2.stocksymbol) and (temp1.num - 9 = temp2.num)
postgres(# union all
postgres(# select temp1.stocksymbol, temp1.num, temp2.quantity, temp2.price from temp1, temp2 where (temp1.stocksymbol = temp2.stocksymbol) and (temp1.num - 8 = temp2.num)
postgres(# union all
postgres(# select temp1.stocksymbol, temp1.num, temp2.quantity, temp2.price from temp1, temp2 where (temp1.stocksymbol = temp2.stocksymbol) and (temp1.num - 7 = temp2.num)
postgres(# union all
postgres(# select temp1.stocksymbol, temp1.num, temp2.quantity, temp2.price from temp1, temp2 where (temp1.stocksymbol = temp2.stocksymbol) and (temp1.num - 6 = temp2.num)
postgres(# union all
postgres(# select temp1.stocksymbol, temp1.num, temp2.quantity, temp2.price from temp1, temp2 where (temp1.stocksymbol = temp2.stocksymbol) and (temp1.num - 5 = temp2.num)
postgres(# union all
postgres(# select temp1.stocksymbol, temp1.num, temp2.quantity, temp2.price from temp1, temp2 where (temp1.stocksymbol = temp2.stocksymbol) and (temp1.num - 4 = temp2.num)
postgres(# union all
postgres(# select temp1.stocksymbol, temp1.num, temp2.quantity, temp2.price from temp1, temp2 where (temp1.stocksymbol = temp2.stocksymbol) and (temp1.num - 3 = temp2.num)
postgres(# union all
postgres(# select temp1.stocksymbol, temp1.num, temp2.quantity, temp2.price from temp1, temp2 where (temp1.stocksymbol = temp2.stocksymbol) and (temp1.num - 2 = temp2.num)
postgres(# union all
postgres(# select temp1.stocksymbol, temp1.num, temp2.quantity, temp2.price from temp1, temp2 where (temp1.stocksymbol = temp2.stocksymbol) and (temp1.num - 1 = temp2.num)
postgres(# union all
postgres(# select temp1.stocksymbol, temp1.num, temp2.quantity, temp2.price from temp1, temp2 where (temp1.stocksymbol = temp2.stocksymbol) and (temp1.num = temp2.num)
postgres(# ) as sub
postgres-# group by stocksymbol, num;
Time: 54562.033 ms
postgres=# 

